function [cineq, ceq, cineqGrad, ceqGrad] = generatedConstraints(InputVariables, extraParams)
% GENERATEDCONSTRAINTS Compute constraint values.
% 
% This function computes the constraint values.
% Update the generated code to add the constraints gradient computation.
% 
% [CINEQ, CEQ] = generatedConstraints(INPUTVARIABLES, EXTRAPARAMS) computes
% the inequality constraint values CINEQ and the equality constraint values
% CEQ at the point INPUTVARIABLES, using the extra parameters in
% EXTRAPARAMS.
% 
% [CINEQ, CEQ, CINEQGRAD, CEQGRAD] = generatedConstraints(INPUTVARIABLES,
% EXTRAPARAMS) additionally computes the inequality constraint gradient
% values CINEQGRAD and the equality constraint gradient values CEQGRAD at
% the current point.
% 
% Auto-generated by prob2struct on 19-Nov-2021 05:01:25
% 
% 

%% Variable indices.
idx_D_i_ratio = 1;
idx_D_int = 2;
idx_D_or = 3;
idx_D_sft = 4;
idx_N_WEC = 5;
idx_w_n = 6;

%% Map solver-based variables to problem-based.
D_i_ratio = InputVariables(idx_D_i_ratio);
D_int = InputVariables(idx_D_int);
D_or = InputVariables(idx_D_or);
D_sft = InputVariables(idx_D_sft);
N_WEC = InputVariables(idx_N_WEC);
w_n = InputVariables(idx_w_n);


%% Insert gradient calculation here.
% If you include a gradient, notify the solver by setting the
% SpecifyConstraintGradient option to true.
if nargout > 2
    cineqGrad = [];
    ceqGrad = [];
end

%% Compute inequality constraints.
cineq = zeros(11,1);
arg1 = zeros([1, 7]);
arg1(1) = D_sft;
arg1(2) = D_i_ratio;
arg1(3) = D_or;
arg1(4) = 1;
arg1(5) = N_WEC;
arg1(6) = D_int;
arg1(7) = w_n;
[~,~,arg2,~,~,~,~,~,~,~] = simulation(arg1(:)', extraParams{1});
optim_problemdef_LHS = (arg2 ./ 1);
optim_problemdef_RHS = 1;

cineq(1) = optim_problemdef_RHS - optim_problemdef_LHS;
arg1 = zeros([1, 7]);
arg1(1) = D_sft;
arg1(2) = D_i_ratio;
arg1(3) = D_or;
arg1(4) = 1;
arg1(5) = N_WEC;
arg1(6) = D_int;
arg1(7) = w_n;
[~,~,~,arg3,~,~,~,~,~,~] = simulation(arg1(:)', extraParams{2});
optim_problemdef_LHS = (arg3(1) ./ 3);
optim_problemdef_RHS = 1;

cineq(2) = optim_problemdef_RHS - optim_problemdef_LHS;
arg1 = zeros([1, 7]);
arg1(1) = D_sft;
arg1(2) = D_i_ratio;
arg1(3) = D_or;
arg1(4) = 1;
arg1(5) = N_WEC;
arg1(6) = D_int;
arg1(7) = w_n;
[~,~,~,arg3,~,~,~,~,~,~] = simulation(arg1(:)', extraParams{3});
optim_problemdef_LHS = (arg3(2) ./ 3);
optim_problemdef_RHS = 1;

cineq(3) = optim_problemdef_RHS - optim_problemdef_LHS;
arg1 = zeros([1, 7]);
arg1(1) = D_sft;
arg1(2) = D_i_ratio;
arg1(3) = D_or;
arg1(4) = 1;
arg1(5) = N_WEC;
arg1(6) = D_int;
arg1(7) = w_n;
[~,~,~,~,arg3,~,~,~,~,~] = simulation(arg1(:)', extraParams{4});
optim_problemdef_LHS = (arg3(1) ./ 3);
optim_problemdef_RHS = 1;

cineq(4) = optim_problemdef_RHS - optim_problemdef_LHS;
arg1 = zeros([1, 7]);
arg1(1) = D_sft;
arg1(2) = D_i_ratio;
arg1(3) = D_or;
arg1(4) = 1;
arg1(5) = N_WEC;
arg1(6) = D_int;
arg1(7) = w_n;
[~,~,~,~,arg3,~,~,~,~,~] = simulation(arg1(:)', extraParams{5});
optim_problemdef_LHS = (arg3(2) ./ 3);
optim_problemdef_RHS = 1;

cineq(5) = optim_problemdef_RHS - optim_problemdef_LHS;
arg1 = zeros([1, 7]);
arg1(1) = D_sft;
arg1(2) = D_i_ratio;
arg1(3) = D_or;
arg1(4) = 1;
arg1(5) = N_WEC;
arg1(6) = D_int;
arg1(7) = w_n;
[~,~,~,~,~,arg3,~,~,~,~] = simulation(arg1(:)', extraParams{6});
optim_problemdef_LHS = (arg3(1) ./ 3);
optim_problemdef_RHS = 1;

cineq(6) = optim_problemdef_RHS - optim_problemdef_LHS;
arg1 = zeros([1, 7]);
arg1(1) = D_sft;
arg1(2) = D_i_ratio;
arg1(3) = D_or;
arg1(4) = 1;
arg1(5) = N_WEC;
arg1(6) = D_int;
arg1(7) = w_n;
[~,~,~,~,~,arg3,~,~,~,~] = simulation(arg1(:)', extraParams{7});
optim_problemdef_LHS = (arg3(2) ./ 3);
optim_problemdef_RHS = 1;

cineq(7) = optim_problemdef_RHS - optim_problemdef_LHS;
arg1 = zeros([1, 7]);
arg1(1) = D_sft;
arg1(2) = D_i_ratio;
arg1(3) = D_or;
arg1(4) = 1;
arg1(5) = N_WEC;
arg1(6) = D_int;
arg1(7) = w_n;
[~,~,~,~,~,~,arg3,~,~,~] = simulation(arg1(:)', extraParams{8});
optim_problemdef_LHS = (arg3(1) ./ 3);
optim_problemdef_RHS = 1;

cineq(8) = optim_problemdef_RHS - optim_problemdef_LHS;
arg1 = zeros([1, 7]);
arg1(1) = D_sft;
arg1(2) = D_i_ratio;
arg1(3) = D_or;
arg1(4) = 1;
arg1(5) = N_WEC;
arg1(6) = D_int;
arg1(7) = w_n;
[~,~,~,~,~,~,arg3,~,~,~] = simulation(arg1(:)', extraParams{9});
optim_problemdef_LHS = (arg3(2) ./ 3);
optim_problemdef_RHS = 1;

cineq(9) = optim_problemdef_RHS - optim_problemdef_LHS;
arg1 = zeros([1, 7]);
arg1(1) = D_sft;
arg1(2) = D_i_ratio;
arg1(3) = D_or;
arg1(4) = 1;
arg1(5) = N_WEC;
arg1(6) = D_int;
arg1(7) = w_n;
[~,~,~,~,~,~,~,optim_problemdef_LHS,~,~] = simulation(arg1(:)', extraParams{10});
optim_problemdef_RHS = 0;

cineq(10) = optim_problemdef_RHS - optim_problemdef_LHS;
arg1 = zeros([1, 7]);
arg1(1) = D_sft;
arg1(2) = D_i_ratio;
arg1(3) = D_or;
arg1(4) = 1;
arg1(5) = N_WEC;
arg1(6) = D_int;
arg1(7) = w_n;
[~,~,~,~,~,~,~,~,optim_problemdef_LHS,~] = simulation(arg1(:)', extraParams{11});
optim_problemdef_RHS = 0;

cineq(11) = optim_problemdef_RHS - optim_problemdef_LHS;

%% Compute equality constraints.
ceq = [];


end