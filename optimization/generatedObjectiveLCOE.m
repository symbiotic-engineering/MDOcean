function [obj, grad] = generatedObjectiveLCOE(inputVariables, extraParams)
% GENERATEDOBJECTIVELCOE Compute objective function value.
% 
% This function computes the objective value.
% Update the generated code to add the objective gradient computation.
% 
% OBJ = generatedObjectiveLCOE(INPUTVARIABLES, EXTRAPARAMS) computes the
% objective value OBJ at the point INPUTVARIABLES, using the extra
% parameters in EXTRAPARAMS.
% 
% [OBJ, GRAD] = generatedObjectiveLCOE(INPUTVARIABLES, EXTRAPARAMS)
% additionally computes the objective gradient value GRAD at the current
% point.
% 
% Auto-generated by prob2struct on 19-Nov-2021 05:01:25
% 
% 

%% Variable indices.
idx_D_i_ratio = 1;
idx_D_int = 2;
idx_D_or = 3;
idx_D_sft = 4;
idx_N_WEC = 5;
idx_w_n = 6;

%% Map solver-based variables to problem-based.
D_i_ratio = inputVariables(idx_D_i_ratio);
D_int = inputVariables(idx_D_int);
D_or = inputVariables(idx_D_or);
D_sft = inputVariables(idx_D_sft);
N_WEC = inputVariables(idx_N_WEC);
w_n = inputVariables(idx_w_n);

%% Insert gradient calculation here.
% If you include a gradient, notify the solver by setting the
% SpecifyObjectiveGradient option to true.
if nargout > 1
    grad = [];
end

%% Compute objective function.
arg1 = zeros([1, 7]);
arg1(1) = D_sft;
arg1(2) = D_i_ratio;
arg1(3) = D_or;
arg1(4) = 1;
arg1(5) = N_WEC;
arg1(6) = D_int;
arg1(7) = w_n;
[obj,~,~,~,~,~,~,~,~,~] = simulation(arg1(:)', extraParams{1});

end